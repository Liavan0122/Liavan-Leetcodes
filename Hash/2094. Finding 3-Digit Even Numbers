## 2094. Finding 3-Digit Even Numbers

### Topic
Array / Hash Table / Sorting / Enumeration

### Idea
因為三位偶數最多只有 900 個（從 100 到 998），可以直接枚舉這些數字，先用freq去紀錄digits題目裡出現的頻率情況，從從 100 到 998，每次加 2（只檢查偶數，將當下的數字拆成百位、十位、個位（例如 132 → 1, 3, 2），
再檢查 digits 中是否有足夠的次數組成這個數字，符合就加入答案集合。

### Time Complexity & Space Complexity
O(n), O(n)

### Code
```
class Solution {
public:
    vector<int> findEvenNumbers(vector<int>& digits) {
        vector<int> freq(10, 0); // 每個digit出現的頻率
        for(int d : digits) freq[d]++;

        vector<int> ans;

        for(int num = 100; num < 999; num += 2){
            int a = num /100; // 抓百位數
            int b = (num / 10) % 10; // 十位
            int c = num % 10; // 個位

            vector<int> tempFreq(10, 0);
            tempFreq[a]++; tempFreq[b]++; tempFreq[c]++;

            // 如果某個數字 i，這個三位數 num 需要的次數 tempFreq[i] 比我們輸入提供的 freq[i]  無法用 digits 組出這個 num
            bool valid = true;
            for(int i = 0; i< 10; i++){
                if(tempFreq[i] > freq[i]){
                    valid = false;
                    break;
                }
            }

            if(valid) ans.push_back(num);
        }
        return ans;
    }
};
```
